//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SilDev.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ExceptionMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExceptionMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SilDev.Properties.ExceptionMessages", typeof(ExceptionMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument is invalid..
        /// </summary>
        internal static string ArgumentInvalid {
            get {
                return ResourceManager.GetString("ArgumentInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument &apos;{0}&apos; is invalid..
        /// </summary>
        internal static string ArgumentInvalidParam {
            get {
                return ResourceManager.GetString("ArgumentInvalidParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The required assembly could not be found..
        /// </summary>
        internal static string AssemblyNotFound {
            get {
                return ResourceManager.GetString("AssemblyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Async file download is already busy, multiple calls are not allowed..
        /// </summary>
        internal static string AsyncDownloadIsBusy {
            get {
                return ResourceManager.GetString("AsyncDownloadIsBusy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path contains invalid characters..
        /// </summary>
        internal static string BadCharsInPath {
            get {
                return ResourceManager.GetString("BadCharsInPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading has been failed. - Bytes Read: .
        /// </summary>
        internal static string BytesReadFailed {
            get {
                return ResourceManager.GetString("BytesReadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writing has been failed. - Bytes Written: .
        /// </summary>
        internal static string BytesWriteFailed {
            get {
                return ResourceManager.GetString("BytesWriteFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input stream contains invalid characters..
        /// </summary>
        internal static string CharsInStreamAreInvalid {
            get {
                return ResourceManager.GetString("CharsInStreamAreInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path cannot contain several consecutive separators. - Path: .
        /// </summary>
        internal static string ConsecutiveSeparatorsInPath {
            get {
                return ResourceManager.GetString("ConsecutiveSeparatorsInPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The destination path is invalid..
        /// </summary>
        internal static string DestPathNotValid {
            get {
                return ResourceManager.GetString("DestPathNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory name is longer than 248 characters. - Path: .
        /// </summary>
        internal static string DirLengthIsTooLong {
            get {
                return ResourceManager.GetString("DirLengthIsTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following character code is invalid: .
        /// </summary>
        internal static string FollowingCharCodeIsInvalid {
            get {
                return ResourceManager.GetString("FollowingCharCodeIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value is not defined.
        ///   Section: &apos;{1}&apos;
        ///   Key: &apos;{0}&apos;
        ///   FileOrContent: &apos;{2}&apos;.
        /// </summary>
        internal static string IniValueNotFound {
            get {
                return ResourceManager.GetString("IniValueNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path does not contain a valid drive. - Path: .
        /// </summary>
        internal static string InvalidDriveInPath {
            get {
                return ResourceManager.GetString("InvalidDriveInPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The last block cannot be a single byte..
        /// </summary>
        internal static string LastBlockIsSingleByte {
            get {
                return ResourceManager.GetString("LastBlockIsSingleByte", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to access to the specified area of the memory..
        /// </summary>
        internal static string MemoryAccess {
            get {
                return ResourceManager.GetString("MemoryAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple calls are not supported..
        /// </summary>
        internal static string MultipleCalls {
            get {
                return ResourceManager.GetString("MultipleCalls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No network interfaces available..
        /// </summary>
        internal static string NetworkInterfacesNotFound {
            get {
                return ResourceManager.GetString("NetworkInterfacesNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The new principal name cannot be longer than the original one..
        /// </summary>
        internal static string NewPrincipalNameTooLong {
            get {
                return ResourceManager.GetString("NewPrincipalNameTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path does not contain any drive. - Path: .
        /// </summary>
        internal static string NoDriveInPath {
            get {
                return ResourceManager.GetString("NoDriveInPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to create a new process with the duplicated token..
        /// </summary>
        internal static string NoProcessWithDuplicatedToken {
            get {
                return ResourceManager.GetString("NoProcessWithDuplicatedToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &quot;{0}&quot; prefix is not supported. - Path: {1}.
        /// </summary>
        internal static string PathHasInvalidPrefix {
            get {
                return ResourceManager.GetString("PathHasInvalidPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path does not contain a valid separator. - Path: .
        /// </summary>
        internal static string PathHasInvalidSeparators {
            get {
                return ResourceManager.GetString("PathHasInvalidSeparators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path does not contain any separator. - Path: .
        /// </summary>
        internal static string PathHasNoSeparators {
            get {
                return ResourceManager.GetString("PathHasNoSeparators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified path is longer than 260 characters. - Path: .
        /// </summary>
        internal static string PathLengthIsTooLong {
            get {
                return ResourceManager.GetString("PathLengthIsTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path length is lower than 3 characters. - Path: .
        /// </summary>
        internal static string PathLengthIsTooLow {
            get {
                return ResourceManager.GetString("PathLengthIsTooLow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find the target from the specified path..
        /// </summary>
        internal static string PathNotFound {
            get {
                return ResourceManager.GetString("PathNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target &apos;{0}&apos; could not be found..
        /// </summary>
        internal static string PathNotFoundTarget {
            get {
                return ResourceManager.GetString("PathNotFoundTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A segment of the path is longer than 255 characters. - Path: .
        /// </summary>
        internal static string PathSegmentLengthIsTooLong {
            get {
                return ResourceManager.GetString("PathSegmentLengthIsTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Privilege value could not be retrieved..
        /// </summary>
        internal static string PrivilegeValueAccess {
            get {
                return ResourceManager.GetString("PrivilegeValueAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The pseudo handle could not be retrieved..
        /// </summary>
        internal static string PseudoHandleNotFound {
            get {
                return ResourceManager.GetString("PseudoHandleNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to open the token for the pseudo handle..
        /// </summary>
        internal static string PseudoHandleTokenAccess {
            get {
                return ResourceManager.GetString("PseudoHandleTokenAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection is read-only..
        /// </summary>
        internal static string ReadOnlyCollection {
            get {
                return ResourceManager.GetString("ReadOnlyCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not connect to service control manager..
        /// </summary>
        internal static string SCManagerConnectionCanceled {
            get {
                return ResourceManager.GetString("SCManagerConnectionCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sequence contains no elements..
        /// </summary>
        internal static string SequenceIsEmpty {
            get {
                return ResourceManager.GetString("SequenceIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service could not be accessed..
        /// </summary>
        internal static string ServiceAccessFailed {
            get {
                return ResourceManager.GetString("ServiceAccessFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to install service..
        /// </summary>
        internal static string ServiceInstallationCanceled {
            get {
                return ResourceManager.GetString("ServiceInstallationCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service not installed..
        /// </summary>
        internal static string ServiceNotFound {
            get {
                return ResourceManager.GetString("ServiceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service could not be started..
        /// </summary>
        internal static string ServiceStartCanceled {
            get {
                return ResourceManager.GetString("ServiceStartCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service status could not be queried..
        /// </summary>
        internal static string ServiceStatusQueryFailed {
            get {
                return ResourceManager.GetString("ServiceStatusQueryFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service could not be deleted. - Error: .
        /// </summary>
        internal static string ServiceUninstallCanceled {
            get {
                return ResourceManager.GetString("ServiceUninstallCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to identifier the shell process..
        /// </summary>
        internal static string ShellPidNotFound {
            get {
                return ResourceManager.GetString("ShellPidNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to open the shell process object..
        /// </summary>
        internal static string ShellProcessAccess {
            get {
                return ResourceManager.GetString("ShellProcessAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to open the shell process token..
        /// </summary>
        internal static string ShellProcessTokenAccess {
            get {
                return ResourceManager.GetString("ShellProcessTokenAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to duplicate the shell process token..
        /// </summary>
        internal static string ShellProcessTokenDuplication {
            get {
                return ResourceManager.GetString("ShellProcessTokenDuplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System restoring is disabled..
        /// </summary>
        internal static string SystemRestoringIsDisabled {
            get {
                return ResourceManager.GetString("SystemRestoringIsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to adjust the token privileges..
        /// </summary>
        internal static string TokenPrivilegesAdjustment {
            get {
                return ResourceManager.GetString("TokenPrivilegesAdjustment", resourceCulture);
            }
        }
    }
}
